appdatalayer.data.dao.query=Model {name} is accessing the data base ({lastSelectStatement})
appdatalayer.data.dao.query.ex=an error occurred ({ex}) when model {name} accessed the data base
appsupport.runtime.action.executeAction=Executing action {name} fired by item {item}
appsupport.runtime.executeTask=Executing task {name}
appdatalayer.data.provider.sqldataprovider.select=Executing this SELECT command ({stmt}) with parameters ({params}) using connection ({conn})
appdatalayer.data.provider.sqldataprovider.update=Executing this UPDATE command ({stmt}) with parameters ({params}) using connection ({conn})
appdatalayer.data.provider.sqldataprovider.insert=Executing this INSERT command ({stmt}) with parameters ({params}) using connection ({conn})
appdatalayer.data.provider.sqldataprovider.delete=Executing this DELETE command ({stmt}) with parameters ({params}) using connection ({conn})
appdatalayer.data.oraclecommand.executereader=Executing this READER command ({stmt}) with parameters ({params}) using connection ({conn})
appdatalayer.data.oraclecommand.executenonquery=Executing this NON QUERY command ({stmt}) with parameters ({params}) using connection ({conn}) 
appdatalayer.data.executed=Executed
appdatalayer.data.oraclecommand.executereader.after=Executed. Number of rows affected ({nrows})
appdatalayer.data.oraclecommand.executenonquery.after=Executed. Returned status ({status})
appdatalayer.data.dao.rowConcurrencyCheck=Executing CONCURRENCY CHECK command ({stmt}) with parameters ({params})
