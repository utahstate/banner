<web-app xmlns="http://java.sun.com/xml/ns/javaee" metadata-complete="true" version="2.5" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <display-name>
    /BannerGeneralSsb-production-9.1
  </display-name>
  <mime-mapping>
    <extension>
      svgz
    </extension>
    <mime-type>
      image/svg+xml
    </mime-type>
  </mime-mapping>
  <mime-mapping>
    <extension>
      svg
    </extension>
    <mime-type>
      image/svg+xml
    </mime-type>
  </mime-mapping>
  <context-param>
    <param-name>
      contextConfigLocation
    </param-name>
    <param-value>
      /WEB-INF/applicationContext.xml
    </param-value>
  </context-param>
  <context-param>
    <param-name>
      webAppRootKey
    </param-name>
    <param-value>
      BannerGeneralSsb-production-9.1
    </param-value>
  </context-param>
  <context-param>
    <param-name>
      sample
    </param-name>
    <param-value>
      Sample Value
    </param-value>
  </context-param>
  <filter>
    <filter-name>
      springSecurityFilterChain
    </filter-name>
    <filter-class>
      org.springframework.web.filter.DelegatingFilterProxy
    </filter-class>
  </filter>
  <filter>
    <filter-name>
      CAS Single Sign Out Filter
    </filter-name>
    <filter-class>
      org.jasig.cas.client.session.SingleSignOutFilter
    </filter-class>
    <init-param>
      <param-name>
        artifactParameterName
      </param-name>
      <param-value>
        SAMLart
      </param-value>
    </init-param>
  </filter>
  <filter>
    <filter-name>
      CAS Validation Filter
    </filter-name>
    <filter-class>
      net.hedtech.jasig.cas.client.BannerSaml11ValidationFilter
    </filter-class>
    <init-param>
      <param-name>
        casServerUrlPrefix
      </param-name>
      <param-value>
        ${cas.serverurlprefix}
      </param-value>
    </init-param>
    <init-param>
      <param-name>
        serverName
      </param-name>
      <param-value>
        ${server.name}
      </param-value>
    </init-param>
    <init-param>
      <param-name>
        redirectAfterValidation
      </param-name>
      <param-value>
        true
      </param-value>
    </init-param>
    <init-param>
      <param-name>
        artifactParameterName
      </param-name>
      <param-value>
        SAMLart
      </param-value>
    </init-param>
    <init-param>
      <param-name>
        tolerance
      </param-name>
      <param-value/>
    </init-param>
  </filter>
  <filter>
    <filter-name>
      CAS HttpServletRequest Wrapper Filter
    </filter-name>
    <filter-class>
      org.jasig.cas.client.util.HttpServletRequestWrapperFilter
    </filter-class>
  </filter>
  <filter>
    <filter-name>
      XFrameOptionsFilter
    </filter-name>
    <filter-class>
      org.springframework.web.filter.DelegatingFilterProxy
    </filter-class>
  </filter>
  <filter>
    <filter-name>
      charEncodingFilter
    </filter-name>
    <filter-class>
      org.springframework.web.filter.DelegatingFilterProxy
    </filter-class>
    <init-param>
      <param-name>
        targetBeanName
      </param-name>
      <param-value>
        characterEncodingFilter
      </param-value>
    </init-param>
    <init-param>
      <param-name>
        targetFilterLifecycle
      </param-name>
      <param-value>
        true
      </param-value>
    </init-param>
  </filter>
  <filter>
    <filter-name>
      DeclaredResourcesPluginFilter
    </filter-name>
    <filter-class>
      org.grails.plugin.resource.ProcessingFilter
    </filter-class>
  </filter>
  <filter>
    <filter-name>
      AdHocResourcesPluginFilter
    </filter-name>
    <filter-class>
      org.grails.plugin.resource.ProcessingFilter
    </filter-class>
    <init-param>
      <param-name>
        adhoc
      </param-name>
      <param-value>
        true
      </param-value>
    </init-param>
  </filter>
  <filter>
    <filter-name>
      urlMapping
    </filter-name>
    <filter-class>
      org.codehaus.groovy.grails.web.mapping.filter.UrlMappingsFilter
    </filter-class>
  </filter>
  <filter>
    <filter-name>
      hiddenHttpMethod
    </filter-name>
    <filter-class>
      org.codehaus.groovy.grails.web.filters.HiddenHttpMethodFilter
    </filter-class>
  </filter>
  <filter>
    <filter-name>
      grailsWebRequest
    </filter-name>
    <filter-class>
      org.codehaus.groovy.grails.web.servlet.mvc.GrailsWebRequestFilter
    </filter-class>
  </filter>
  <filter-mapping>
    <filter-name>
      CAS Single Sign Out Filter
    </filter-name>
    <url-pattern>
      /*
    </url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>
      CAS Validation Filter
    </filter-name>
    <url-pattern>
      /*
    </url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>
      CAS HttpServletRequest Wrapper Filter
    </filter-name>
    <url-pattern>
      /*
    </url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>
      charEncodingFilter
    </filter-name>
    <url-pattern>
      /*
    </url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>
      XFrameOptionsFilter
    </filter-name>
    <url-pattern>
      /login/auth
    </url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>
      DeclaredResourcesPluginFilter
    </filter-name>
    <url-pattern>
      /static/*
    </url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>
      AdHocResourcesPluginFilter
    </filter-name>
    <url-pattern>
      /images/*
    </url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>
      AdHocResourcesPluginFilter
    </filter-name>
    <url-pattern>
      *.css
    </url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>
      AdHocResourcesPluginFilter
    </filter-name>
    <url-pattern>
      *.js
    </url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>
      hiddenHttpMethod
    </filter-name>
    <url-pattern>
      /*
    </url-pattern>
    <dispatcher>
      FORWARD
    </dispatcher>
    <dispatcher>
      REQUEST
    </dispatcher>
  </filter-mapping>
  <filter-mapping>
    <filter-name>
      grailsWebRequest
    </filter-name>
    <url-pattern>
      /*
    </url-pattern>
    <dispatcher>
      FORWARD
    </dispatcher>
    <dispatcher>
      REQUEST
    </dispatcher>
    <dispatcher>
      ERROR
    </dispatcher>
  </filter-mapping>
  <filter-mapping>
    <filter-name>
      springSecurityFilterChain
    </filter-name>
    <url-pattern>
      /*
    </url-pattern>
    <dispatcher>
      ERROR
    </dispatcher>
    <dispatcher>
      REQUEST
    </dispatcher>
  </filter-mapping>
  <filter-mapping>
    <filter-name>
      urlMapping
    </filter-name>
    <url-pattern>
      /*
    </url-pattern>
    <dispatcher>
      FORWARD
    </dispatcher>
    <dispatcher>
      REQUEST
    </dispatcher>
  </filter-mapping>
  <listener>
    <listener-class>
      org.codehaus.groovy.grails.plugins.log4j.web.util.Log4jConfigListener
    </listener-class>
  </listener>
  <listener>
    <display-name>
      Banner Core Session Cleaner
    </display-name>
    <listener-class>
      net.hedtech.banner.db.DbConnectionCacheSessionListener
    </listener-class>
  </listener>
  <listener>
    <listener-class>
      org.codehaus.groovy.grails.web.context.GrailsContextLoaderListener
    </listener-class>
  </listener>
  <servlet>
    <servlet-name>
      grails
    </servlet-name>
    <servlet-class>
      org.codehaus.groovy.grails.web.servlet.GrailsDispatcherServlet
    </servlet-class>
    <init-param>
      <param-name>
        dispatchOptionsRequest
      </param-name>
      <param-value>
        true
      </param-value>
    </init-param>
    <load-on-startup>
      1
    </load-on-startup>
  </servlet>
  <servlet>
    <servlet-name>
      gsp
    </servlet-name>
    <servlet-class>
      org.codehaus.groovy.grails.web.pages.GroovyPagesServlet
    </servlet-class>
  </servlet>
  <servlet>
    <servlet-name>
      grails-errorhandler
    </servlet-name>
    <servlet-class>
      org.codehaus.groovy.grails.web.servlet.ErrorHandlingServlet
    </servlet-class>
  </servlet>
  <servlet-mapping>
    <servlet-name>
      gsp
    </servlet-name>
    <url-pattern>
      *.gsp
    </url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>
      grails-errorhandler
    </servlet-name>
    <url-pattern>
      /grails-errorhandler
    </url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>
      grails
    </servlet-name>
    <url-pattern>
      *.dispatch
    </url-pattern>
  </servlet-mapping>
  <session-config>
    <session-timeout>
      30
    </session-timeout>
  </session-config>
  <welcome-file-list>
    <welcome-file>
      index.html
    </welcome-file>
    <welcome-file>
      index.jsp
    </welcome-file>
    <welcome-file>
      index.gsp
    </welcome-file>
  </welcome-file-list>
  <error-page>
    <error-code>
      500
    </error-code>
    <location>
      /grails-errorhandler
    </location>
  </error-page>
  <resource-ref>
    <description>
      BannerDS Datasource
    </description>
    <res-ref-name>
      jdbc/bannerDataSource
    </res-ref-name>
    <res-type>
      javax.sql.DataSource
    </res-type>
    <res-auth>
      Container
    </res-auth>
  </resource-ref>
  <resource-ref>
    <description>
      BannerSelfService Datasource
    </description>
    <res-ref-name>
      jdbc/bannerSsbDataSource
    </res-ref-name>
    <res-type>
      javax.sql.DataSource
    </res-type>
    <res-auth>
      Container
    </res-auth>
  </resource-ref>
</web-app>
